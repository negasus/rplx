// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package rplx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SyncNodeValue struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Stamp                int64    `protobuf:"varint,3,opt,name=Stamp,proto3" json:"Stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncNodeValue) Reset()         { *m = SyncNodeValue{} }
func (m *SyncNodeValue) String() string { return proto.CompactTextString(m) }
func (*SyncNodeValue) ProtoMessage()    {}
func (*SyncNodeValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_d363c6a1e6e7a738, []int{0}
}
func (m *SyncNodeValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncNodeValue.Unmarshal(m, b)
}
func (m *SyncNodeValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncNodeValue.Marshal(b, m, deterministic)
}
func (dst *SyncNodeValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncNodeValue.Merge(dst, src)
}
func (m *SyncNodeValue) XXX_Size() int {
	return xxx_messageInfo_SyncNodeValue.Size(m)
}
func (m *SyncNodeValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncNodeValue.DiscardUnknown(m)
}

var xxx_messageInfo_SyncNodeValue proto.InternalMessageInfo

func (m *SyncNodeValue) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SyncNodeValue) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *SyncNodeValue) GetStamp() int64 {
	if m != nil {
		return m.Stamp
	}
	return 0
}

type SyncVariable struct {
	// map key - nodeID
	NodesValues          map[string]*SyncNodeValue `protobuf:"bytes,1,rep,name=NodesValues,proto3" json:"NodesValues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TTL                  int64                     `protobuf:"varint,2,opt,name=TTL,proto3" json:"TTL,omitempty"`
	TTLStamp             int64                     `protobuf:"varint,3,opt,name=TTLStamp,proto3" json:"TTLStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SyncVariable) Reset()         { *m = SyncVariable{} }
func (m *SyncVariable) String() string { return proto.CompactTextString(m) }
func (*SyncVariable) ProtoMessage()    {}
func (*SyncVariable) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_d363c6a1e6e7a738, []int{1}
}
func (m *SyncVariable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncVariable.Unmarshal(m, b)
}
func (m *SyncVariable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncVariable.Marshal(b, m, deterministic)
}
func (dst *SyncVariable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncVariable.Merge(dst, src)
}
func (m *SyncVariable) XXX_Size() int {
	return xxx_messageInfo_SyncVariable.Size(m)
}
func (m *SyncVariable) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncVariable.DiscardUnknown(m)
}

var xxx_messageInfo_SyncVariable proto.InternalMessageInfo

func (m *SyncVariable) GetNodesValues() map[string]*SyncNodeValue {
	if m != nil {
		return m.NodesValues
	}
	return nil
}

func (m *SyncVariable) GetTTL() int64 {
	if m != nil {
		return m.TTL
	}
	return 0
}

func (m *SyncVariable) GetTTLStamp() int64 {
	if m != nil {
		return m.TTLStamp
	}
	return 0
}

type SyncRequest struct {
	NodeID string `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	// map key - variable name
	Variables            map[string]*SyncVariable `protobuf:"bytes,2,rep,name=Variables,proto3" json:"Variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SyncRequest) Reset()         { *m = SyncRequest{} }
func (m *SyncRequest) String() string { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()    {}
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_d363c6a1e6e7a738, []int{2}
}
func (m *SyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRequest.Unmarshal(m, b)
}
func (m *SyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRequest.Marshal(b, m, deterministic)
}
func (dst *SyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRequest.Merge(dst, src)
}
func (m *SyncRequest) XXX_Size() int {
	return xxx_messageInfo_SyncRequest.Size(m)
}
func (m *SyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRequest proto.InternalMessageInfo

func (m *SyncRequest) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *SyncRequest) GetVariables() map[string]*SyncVariable {
	if m != nil {
		return m.Variables
	}
	return nil
}

type SyncResponse struct {
	Code                 int64    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncResponse) Reset()         { *m = SyncResponse{} }
func (m *SyncResponse) String() string { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()    {}
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_d363c6a1e6e7a738, []int{3}
}
func (m *SyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResponse.Unmarshal(m, b)
}
func (m *SyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResponse.Marshal(b, m, deterministic)
}
func (dst *SyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResponse.Merge(dst, src)
}
func (m *SyncResponse) XXX_Size() int {
	return xxx_messageInfo_SyncResponse.Size(m)
}
func (m *SyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResponse proto.InternalMessageInfo

func (m *SyncResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*SyncNodeValue)(nil), "rplx.SyncNodeValue")
	proto.RegisterType((*SyncVariable)(nil), "rplx.SyncVariable")
	proto.RegisterMapType((map[string]*SyncNodeValue)(nil), "rplx.SyncVariable.NodesValuesEntry")
	proto.RegisterType((*SyncRequest)(nil), "rplx.SyncRequest")
	proto.RegisterMapType((map[string]*SyncVariable)(nil), "rplx.SyncRequest.VariablesEntry")
	proto.RegisterType((*SyncResponse)(nil), "rplx.SyncResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReplicatorClient is the client API for Replicator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicatorClient interface {
	Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error)
}

type replicatorClient struct {
	cc *grpc.ClientConn
}

func NewReplicatorClient(cc *grpc.ClientConn) ReplicatorClient {
	return &replicatorClient{cc}
}

func (c *replicatorClient) Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error) {
	out := new(SyncResponse)
	err := c.cc.Invoke(ctx, "/rplx.Replicator/Sync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicatorServer is the server API for Replicator service.
type ReplicatorServer interface {
	Sync(context.Context, *SyncRequest) (*SyncResponse, error)
}

func RegisterReplicatorServer(s *grpc.Server, srv ReplicatorServer) {
	s.RegisterService(&_Replicator_serviceDesc, srv)
}

func _Replicator_Sync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicatorServer).Sync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rplx.Replicator/Sync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicatorServer).Sync(ctx, req.(*SyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Replicator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rplx.Replicator",
	HandlerType: (*ReplicatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sync",
			Handler:    _Replicator_Sync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_d363c6a1e6e7a738) }

var fileDescriptor_message_d363c6a1e6e7a738 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x75, 0x5b, 0x20, 0x32, 0x15, 0x82, 0xa3, 0x31, 0x4d, 0x4f, 0x4d, 0xbd, 0xd4, 0x4b, 0x4d,
	0xf0, 0x62, 0x4c, 0xf4, 0x22, 0x1c, 0x88, 0xc4, 0x98, 0xa5, 0xe1, 0x5e, 0x60, 0x62, 0x88, 0x85,
	0xd6, 0x6e, 0x31, 0xf2, 0xcb, 0xfc, 0x2b, 0xfe, 0x1c, 0xb3, 0xbb, 0xb5, 0x2c, 0xe2, 0x6d, 0x3e,
	0xde, 0x7b, 0x7d, 0x6f, 0xba, 0xd0, 0x59, 0x91, 0x10, 0xc9, 0x2b, 0x45, 0x79, 0x91, 0x95, 0x19,
	0x36, 0x8a, 0x3c, 0xfd, 0x0c, 0x9e, 0xa0, 0x33, 0xd9, 0xae, 0xe7, 0xcf, 0xd9, 0x82, 0xa6, 0x49,
	0xba, 0x21, 0xec, 0x82, 0x35, 0x1a, 0xb8, 0xcc, 0x67, 0x61, 0x9b, 0x5b, 0xa3, 0x01, 0x9e, 0x43,
	0x53, 0x2d, 0x5c, 0xcb, 0x67, 0xa1, 0xcd, 0x75, 0x23, 0xa7, 0x93, 0x32, 0x59, 0xe5, 0xae, 0xad,
	0xa7, 0xaa, 0x09, 0xbe, 0x19, 0x9c, 0x48, 0xb5, 0x69, 0x52, 0x2c, 0x93, 0x59, 0x4a, 0x38, 0x04,
	0x47, 0x2a, 0x0b, 0x45, 0x12, 0x2e, 0xf3, 0xed, 0xd0, 0xe9, 0x5f, 0x46, 0xf2, 0xcb, 0x91, 0x09,
	0x8c, 0x0c, 0xd4, 0x70, 0x5d, 0x16, 0x5b, 0x6e, 0xf2, 0xb0, 0x07, 0x76, 0x1c, 0x8f, 0x2b, 0x07,
	0xb2, 0x44, 0x0f, 0x8e, 0xe3, 0x78, 0x6c, 0x5a, 0xa8, 0x7b, 0x6f, 0x02, 0xbd, 0xbf, 0x72, 0x52,
	0xe1, 0x8d, 0xb6, 0x55, 0x2c, 0x59, 0xe2, 0x15, 0x34, 0x3f, 0xea, 0x5c, 0x4e, 0xff, 0x6c, 0x67,
	0xaa, 0xbe, 0x05, 0xd7, 0x88, 0x3b, 0xeb, 0x96, 0x05, 0x5f, 0x0c, 0x1c, 0xb9, 0xe4, 0xf4, 0xbe,
	0x21, 0x51, 0xe2, 0x05, 0xb4, 0x24, 0xae, 0x3e, 0x55, 0xd5, 0xe1, 0x03, 0xb4, 0x7f, 0x43, 0x09,
	0xd7, 0x52, 0x79, 0xfd, 0x9d, 0x74, 0xc5, 0x8e, 0x6a, 0x88, 0x0e, 0xbb, 0xa3, 0x78, 0x2f, 0xd0,
	0xdd, 0x5f, 0xfe, 0x63, 0x3d, 0xdc, 0xb7, 0x8e, 0x87, 0xf7, 0x34, 0x9d, 0x07, 0xfa, 0x9f, 0x70,
	0x12, 0x79, 0xb6, 0x16, 0x84, 0x08, 0x8d, 0xc7, 0x6c, 0x41, 0x4a, 0xd0, 0xe6, 0xaa, 0xee, 0xdf,
	0x03, 0x70, 0xca, 0xd3, 0xe5, 0x3c, 0x29, 0xb3, 0x02, 0xaf, 0xa1, 0x21, 0x19, 0x78, 0x7a, 0x60,
	0xdc, 0x43, 0x73, 0xa4, 0x05, 0x83, 0xa3, 0x59, 0x4b, 0xbd, 0xa8, 0x9b, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x84, 0xc9, 0x19, 0x0d, 0x62, 0x02, 0x00, 0x00,
}
